// Code generated by MockGen. DO NOT EDIT.
// Source: myinterface/myinterface.go

// Package mock_myinterface is a generated GoMock package.
package myinterface

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMyInterface is a mock of MyInterface interface.
type MockMyInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMyInterfaceMockRecorder
}

// MockMyInterfaceMockRecorder is the mock recorder for MockMyInterface.
type MockMyInterfaceMockRecorder struct {
	mock *MockMyInterface
}

// NewMockMyInterface creates a new mock instance.
func NewMockMyInterface(ctrl *gomock.Controller) *MockMyInterface {
	mock := &MockMyInterface{ctrl: ctrl}
	mock.recorder = &MockMyInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMyInterface) EXPECT() *MockMyInterfaceMockRecorder {
	return m.recorder
}

// SomeMethod mocks base method.
func (m *MockMyInterface) SomeMethod(i int, s string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SomeMethod", i, s)
}

// SomeMethod indicates an expected call of SomeMethod.
func (mr *MockMyInterfaceMockRecorder) SomeMethod(i, s interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SomeMethod", reflect.TypeOf((*MockMyInterface)(nil).SomeMethod), i, s)
}
