// Code generated by MockGen. DO NOT EDIT.
// Source: main.go

// Package mock_main is a generated GoMock package.
package main

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockmyInterface is a mock of myInterface interface.
type MockmyInterface struct {
	ctrl     *gomock.Controller
	recorder *MockmyInterfaceMockRecorder
}

// MockmyInterfaceMockRecorder is the mock recorder for MockmyInterface.
type MockmyInterfaceMockRecorder struct {
	mock *MockmyInterface
}

// NewMockmyInterface creates a new mock instance.
func NewMockmyInterface(ctrl *gomock.Controller) *MockmyInterface {
	mock := &MockmyInterface{ctrl: ctrl}
	mock.recorder = &MockmyInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockmyInterface) EXPECT() *MockmyInterfaceMockRecorder {
	return m.recorder
}

// foo mocks base method.
func (m *MockmyInterface) foo(i int, s string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "foo", i, s)
}

// foo indicates an expected call of foo.
func (mr *MockmyInterfaceMockRecorder) foo(i, s interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "foo", reflect.TypeOf((*MockmyInterface)(nil).foo), i, s)
}
